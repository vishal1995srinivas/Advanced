// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Item/> renders and matched the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Item
    item={
      Object {
        "description": "This item is very cool!",
        "id": "ABC123",
        "image": "dog.jpg",
        "largeImage": "largedog.jpg",
        "price": 5000,
        "title": "A Cool item",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <img
          alt="A Cool item"
          src="dog.jpg"
        />,
        <Title>
          <Link
            href={
              Object {
                "pathname": "/item",
                "query": Object {
                  "id": "ABC123",
                },
              }
            }
          >
            <a>
              A Cool item
            </a>
          </Link>
        </Title>,
        <PriceTag>
          $50
        </PriceTag>,
        <p>
          This item is very cool!
        </p>,
        <div
          className="buttonList"
        >
          <Link
            href={
              Object {
                "pathname": "update",
                "query": Object {
                  "id": "ABC123",
                },
              }
            }
          >
            <a>
              Edit ✏️
            </a>
          </Link>
          <AddToCart
            id="ABC123"
          />
          <DeleteItem
            id="ABC123"
          >
            Delete This Item
          </DeleteItem>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "A Cool item",
          "src": "dog.jpg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Link
            href={
              Object {
                "pathname": "/item",
                "query": Object {
                  "id": "ABC123",
                },
              }
            }
          >
            <a>
              A Cool item
            </a>
          </Link>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <a>
              A Cool item
            </a>,
            "href": Object {
              "pathname": "/item",
              "query": Object {
                "id": "ABC123",
              },
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "A Cool item",
            },
            "ref": null,
            "rendered": "A Cool item",
            "type": "a",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "$50",
        },
        "ref": null,
        "rendered": "$50",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This item is very cool!",
        },
        "ref": null,
        "rendered": "This item is very cool!",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              href={
                Object {
                  "pathname": "update",
                  "query": Object {
                    "id": "ABC123",
                  },
                }
              }
            >
              <a>
                Edit ✏️
              </a>
            </Link>,
            <AddToCart
              id="ABC123"
            />,
            <DeleteItem
              id="ABC123"
            >
              Delete This Item
            </DeleteItem>,
          ],
          "className": "buttonList",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <a>
                Edit ✏️
              </a>,
              "href": Object {
                "pathname": "update",
                "query": Object {
                  "id": "ABC123",
                },
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Edit ✏️",
              },
              "ref": null,
              "rendered": "Edit ✏️",
              "type": "a",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "ABC123",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Delete This Item",
              "id": "ABC123",
            },
            "ref": null,
            "rendered": "Delete This Item",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <img
            alt="A Cool item"
            src="dog.jpg"
          />,
          <Title>
            <Link
              href={
                Object {
                  "pathname": "/item",
                  "query": Object {
                    "id": "ABC123",
                  },
                }
              }
            >
              <a>
                A Cool item
              </a>
            </Link>
          </Title>,
          <PriceTag>
            $50
          </PriceTag>,
          <p>
            This item is very cool!
          </p>,
          <div
            className="buttonList"
          >
            <Link
              href={
                Object {
                  "pathname": "update",
                  "query": Object {
                    "id": "ABC123",
                  },
                }
              }
            >
              <a>
                Edit ✏️
              </a>
            </Link>
            <AddToCart
              id="ABC123"
            />
            <DeleteItem
              id="ABC123"
            >
              Delete This Item
            </DeleteItem>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "A Cool item",
            "src": "dog.jpg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Link
              href={
                Object {
                  "pathname": "/item",
                  "query": Object {
                    "id": "ABC123",
                  },
                }
              }
            >
              <a>
                A Cool item
              </a>
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <a>
                A Cool item
              </a>,
              "href": Object {
                "pathname": "/item",
                "query": Object {
                  "id": "ABC123",
                },
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "A Cool item",
              },
              "ref": null,
              "rendered": "A Cool item",
              "type": "a",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "$50",
          },
          "ref": null,
          "rendered": "$50",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This item is very cool!",
          },
          "ref": null,
          "rendered": "This item is very cool!",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                href={
                  Object {
                    "pathname": "update",
                    "query": Object {
                      "id": "ABC123",
                    },
                  }
                }
              >
                <a>
                  Edit ✏️
                </a>
              </Link>,
              <AddToCart
                id="ABC123"
              />,
              <DeleteItem
                id="ABC123"
              >
                Delete This Item
              </DeleteItem>,
            ],
            "className": "buttonList",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <a>
                  Edit ✏️
                </a>,
                "href": Object {
                  "pathname": "update",
                  "query": Object {
                    "id": "ABC123",
                  },
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Edit ✏️",
                },
                "ref": null,
                "rendered": "Edit ✏️",
                "type": "a",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "ABC123",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Delete This Item",
                "id": "ABC123",
              },
              "ref": null,
              "rendered": "Delete This Item",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
